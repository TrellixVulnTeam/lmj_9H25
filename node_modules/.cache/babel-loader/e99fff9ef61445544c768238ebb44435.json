{"ast":null,"code":"import { FETCH_POSTS, FETCH_LATEST, FETCH_ARTICLE, FETCH_RECENT } from \"../actions/types\";\nimport axios from \"axios\";\nexport const fetchPosts = () => async dispatch => {\n  // const fetchData = await axios.get(\"/api\");\n  // const data = await fetchData.data;\n  // const cons = await console.log(data);\n  // return cons;\n  axios.get(\"/api\") // .get(\"/blog/articles.json\")\n  .then(res => res.data).then(data => {\n    console.log(datta);\n    dispatch({\n      type: FETCH_POSTS,\n      payload: data\n    });\n  }).then(() => console.log(\"Fetched fromg MongoDB\")).catch(err => console.log(err));\n};\nexport const fetchLatest = () => async dispatch => {\n  axios.get(\"/api\") // .get(\"/blog/articles.json\")\n  .then(res => res.data).then(data => {\n    dispatch({\n      type: FETCH_LATEST,\n      payload: data[0]\n    });\n  }).then(() => console.log(\"Fetched fromg MongoDB\")).catch(err => console.log(err));\n};\nexport const fetchArticle = param => async dispatch => {\n  axios.get(\"/api\") // .get(\"/blog/articles.json\")\n  .then(res => res.data).then(response => {\n    return response.find(item => item.heading === param);\n  }).then(data => {\n    dispatch({\n      type: FETCH_ARTICLE,\n      payload: data\n    });\n  }).then(() => console.log(\"Fetched fromg MongoDB\")).catch(err => console.log(err));\n};\nexport const fetchRecent = () => async dispatch => {\n  axios.get(\"/api\") // .get(\"/blog/articles.json\")\n  .then(res => res.data).then(data => {\n    dispatch({\n      type: FETCH_RECENT,\n      payload: data.slice(0, 3)\n    });\n  }).then(() => console.log(\"Fetched fromg MongoDB\")).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/mac/Desktop/Codes/lmj/client/src/actions/blogActions.js"],"names":["FETCH_POSTS","FETCH_LATEST","FETCH_ARTICLE","FETCH_RECENT","axios","fetchPosts","dispatch","get","then","res","data","console","log","datta","type","payload","catch","err","fetchLatest","fetchArticle","param","response","find","item","heading","fetchRecent","slice"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,EAAmDC,YAAnD,QAAuE,kBAAvE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD;AACA;AACA;AACA;AAEAF,EAAAA,KAAK,CACHG,GADF,CACM,MADN,EAEC;AAFD,GAGEC,IAHF,CAGQC,GAAD,IAASA,GAAG,CAACC,IAHpB,EAIEF,IAJF,CAIQE,IAAD,IAAU;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAP,IAAAA,QAAQ,CAAC;AACRQ,MAAAA,IAAI,EAAEd,WADE;AAERe,MAAAA,OAAO,EAAEL;AAFD,KAAD,CAAR;AAIA,GAVF,EAWEF,IAXF,CAWO,MAAMG,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAXb,EAYEI,KAZF,CAYSC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAZjB;AAaA,CAnBM;AAqBP,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOZ,QAAP,IAAoB;AACpDF,EAAAA,KAAK,CACHG,GADF,CACM,MADN,EAEC;AAFD,GAGEC,IAHF,CAGQC,GAAD,IAASA,GAAG,CAACC,IAHpB,EAIEF,IAJF,CAIQE,IAAD,IAAU;AACfJ,IAAAA,QAAQ,CAAC;AACRQ,MAAAA,IAAI,EAAEb,YADE;AAERc,MAAAA,OAAO,EAAEL,IAAI,CAAC,CAAD;AAFL,KAAD,CAAR;AAIA,GATF,EAUEF,IAVF,CAUO,MAAMG,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAVb,EAWEI,KAXF,CAWSC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAXjB;AAYA,CAbM;AAeP,OAAO,MAAME,YAAY,GAAIC,KAAD,IAAW,MAAOd,QAAP,IAAoB;AAC1DF,EAAAA,KAAK,CACHG,GADF,CACM,MADN,EAEC;AAFD,GAGEC,IAHF,CAGQC,GAAD,IAASA,GAAG,CAACC,IAHpB,EAIEF,IAJF,CAIQa,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,CAAeC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiBJ,KAAzC,CAAP;AACA,GANF,EAOEZ,IAPF,CAOQE,IAAD,IAAU;AACfJ,IAAAA,QAAQ,CAAC;AACRQ,MAAAA,IAAI,EAAEZ,aADE;AAERa,MAAAA,OAAO,EAAEL;AAFD,KAAD,CAAR;AAIA,GAZF,EAaEF,IAbF,CAaO,MAAMG,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAbb,EAcEI,KAdF,CAcSC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAdjB;AAeA,CAhBM;AAkBP,OAAO,MAAMQ,WAAW,GAAG,MAAM,MAAOnB,QAAP,IAAoB;AACpDF,EAAAA,KAAK,CACHG,GADF,CACM,MADN,EAEC;AAFD,GAGEC,IAHF,CAGQC,GAAD,IAASA,GAAG,CAACC,IAHpB,EAIEF,IAJF,CAIQE,IAAD,IAAU;AACfJ,IAAAA,QAAQ,CAAC;AACRQ,MAAAA,IAAI,EAAEX,YADE;AAERY,MAAAA,OAAO,EAAEL,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAc,CAAd;AAFD,KAAD,CAAR;AAIA,GATF,EAUElB,IAVF,CAUO,MAAMG,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAVb,EAWEI,KAXF,CAWSC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAXjB;AAYA,CAbM","sourcesContent":["import { FETCH_POSTS, FETCH_LATEST, FETCH_ARTICLE, FETCH_RECENT } from \"../actions/types\";\nimport axios from \"axios\";\n\nexport const fetchPosts = () => async (dispatch) => {\n\t// const fetchData = await axios.get(\"/api\");\n\t// const data = await fetchData.data;\n\t// const cons = await console.log(data);\n\t// return cons;\n\n\taxios\n\t\t.get(\"/api\")\n\t\t// .get(\"/blog/articles.json\")\n\t\t.then((res) => res.data)\n\t\t.then((data) => {\n\t\t\tconsole.log(datta);\n\t\t\tdispatch({\n\t\t\t\ttype: FETCH_POSTS,\n\t\t\t\tpayload: data,\n\t\t\t});\n\t\t})\n\t\t.then(() => console.log(\"Fetched fromg MongoDB\"))\n\t\t.catch((err) => console.log(err));\n};\n\nexport const fetchLatest = () => async (dispatch) => {\n\taxios\n\t\t.get(\"/api\")\n\t\t// .get(\"/blog/articles.json\")\n\t\t.then((res) => res.data)\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: FETCH_LATEST,\n\t\t\t\tpayload: data[0],\n\t\t\t});\n\t\t})\n\t\t.then(() => console.log(\"Fetched fromg MongoDB\"))\n\t\t.catch((err) => console.log(err));\n};\n\nexport const fetchArticle = (param) => async (dispatch) => {\n\taxios\n\t\t.get(\"/api\")\n\t\t// .get(\"/blog/articles.json\")\n\t\t.then((res) => res.data)\n\t\t.then((response) => {\n\t\t\treturn response.find((item) => item.heading === param);\n\t\t})\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: FETCH_ARTICLE,\n\t\t\t\tpayload: data,\n\t\t\t});\n\t\t})\n\t\t.then(() => console.log(\"Fetched fromg MongoDB\"))\n\t\t.catch((err) => console.log(err));\n};\n\nexport const fetchRecent = () => async (dispatch) => {\n\taxios\n\t\t.get(\"/api\")\n\t\t// .get(\"/blog/articles.json\")\n\t\t.then((res) => res.data)\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: FETCH_RECENT,\n\t\t\t\tpayload: data.slice(0, 3),\n\t\t\t});\n\t\t})\n\t\t.then(() => console.log(\"Fetched fromg MongoDB\"))\n\t\t.catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}