{"ast":null,"code":"import { FETCH_POSTS, FETCH_LATEST, FETCH_ARTICLE, FETCH_RECENT } from \"../actions/types\";\n\nconst axios = require(\"axios\");\n\nexport const fetchPosts = () => async dispatch => {\n  // fetch(\"/blog/articles.json\")\n  // \t.then((res) => res.json())\n  // \t.then((data) => {\n  // \t\tdispatch({\n  // \t\t\ttype: FETCH_POSTS,\n  // \t\t\tpayload: data,\n  // \t\t});\n  // \t})\n  // \t.catch((err) => console.log(err));\n  axios.get(\"/api\").then(res => res.data).then(data => {\n    dispatch({\n      type: FETCH_POSTS,\n      payload: data\n    });\n  }).catch(err => console.log(err));\n};\nexport const fetchLatest = () => async dispatch => {\n  // fetch(\"/blog/articles.json\")\n  // \t.then((res) => res.json())\n  // \t.then((data) => {\n  // \t\tdispatch({\n  // \t\t\ttype: FETCH_LATEST,\n  // \t\t\tpayload: data[0],\n  // \t\t});\n  // \t})\n  // \t.catch((err) => console.log(err));\n  axios.get(\"/api\").then(res => res.data).then(data => {\n    dispatch({\n      type: FETCH_LATEST,\n      payload: data[0]\n    });\n  }).catch(err => console.log(err));\n};\nexport const fetchArticle = param => async dispatch => {\n  // const fetchData = await fetch(\"/blog/articles.json\");\n  // const json = await fetchData.json();\n  // const data = await json.find((item) => item.heading === param);\n  // await dispatch({\n  // \ttype: FETCH_ARTICLE,\n  // \tpayload: data,\n  // });\n  axios.get(\"/api\").then(res => res.data).then(response => {\n    response.find(item => item.heading === param);\n  }).then(data => {\n    dispatch({\n      type: FETCH_ARTICLE,\n      payload: data\n    });\n  }).catch(err => console.log(err));\n};\nexport const fetchRecent = () => async dispatch => {\n  // const fetchData = await fetch(\"/blog/articles.json\");\n  // const json = await fetchData.json();\n  // const data = await json.slice(0, 3);\n  // await dispatch({\n  // \ttype: FETCH_RECENT,\n  // \tpayload: data,\n  // });\n  axios.get(\"/api\").then(res => res.data).then(data => {\n    dispatch({\n      type: FETCH_LATEST,\n      payload: data.slice(0, 3)\n    });\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/mac/Desktop/Codes/lmj/client/src/actions/blogActions.js"],"names":["FETCH_POSTS","FETCH_LATEST","FETCH_ARTICLE","FETCH_RECENT","axios","require","fetchPosts","dispatch","get","then","res","data","type","payload","catch","err","console","log","fetchLatest","fetchArticle","param","response","find","item","heading","fetchRecent","slice"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,EAAmDC,YAAnD,QAAuE,kBAAvE;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,KAAK,CACHI,GADF,CACM,MADN,EAEEC,IAFF,CAEQC,GAAD,IAASA,GAAG,CAACC,IAFpB,EAGEF,IAHF,CAGQE,IAAD,IAAU;AACfJ,IAAAA,QAAQ,CAAC;AACRK,MAAAA,IAAI,EAAEZ,WADE;AAERa,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIA,GARF,EASEG,KATF,CASSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATjB;AAUA,CApBM;AAsBP,OAAO,MAAMG,WAAW,GAAG,MAAM,MAAOX,QAAP,IAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAH,EAAAA,KAAK,CACHI,GADF,CACM,MADN,EAEEC,IAFF,CAEQC,GAAD,IAASA,GAAG,CAACC,IAFpB,EAGEF,IAHF,CAGQE,IAAD,IAAU;AACfJ,IAAAA,QAAQ,CAAC;AACRK,MAAAA,IAAI,EAAEX,YADE;AAERY,MAAAA,OAAO,EAAEF,IAAI,CAAC,CAAD;AAFL,KAAD,CAAR;AAIA,GARF,EASEG,KATF,CASSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATjB;AAUA,CArBM;AAuBP,OAAO,MAAMI,YAAY,GAAIC,KAAD,IAAW,MAAOb,QAAP,IAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,KAAK,CACHI,GADF,CACM,MADN,EAEEC,IAFF,CAEQC,GAAD,IAASA,GAAG,CAACC,IAFpB,EAGEF,IAHF,CAGQY,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,IAAT,CAAeC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiBJ,KAAzC;AACA,GALF,EAMEX,IANF,CAMQE,IAAD,IAAU;AACfJ,IAAAA,QAAQ,CAAC;AACRK,MAAAA,IAAI,EAAEV,aADE;AAERW,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIA,GAXF,EAYEG,KAZF,CAYSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZjB;AAaA,CArBM;AAuBP,OAAO,MAAMU,WAAW,GAAG,MAAM,MAAOlB,QAAP,IAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,KAAK,CACHI,GADF,CACM,MADN,EAEEC,IAFF,CAEQC,GAAD,IAASA,GAAG,CAACC,IAFpB,EAGEF,IAHF,CAGQE,IAAD,IAAU;AACfJ,IAAAA,QAAQ,CAAC;AACRK,MAAAA,IAAI,EAAEX,YADE;AAERY,MAAAA,OAAO,EAAEF,IAAI,CAACe,KAAL,CAAW,CAAX,EAAa,CAAb;AAFD,KAAD,CAAR;AAIA,GARF,EASEZ,KATF,CASSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATjB;AAUA,CAlBM","sourcesContent":["import { FETCH_POSTS, FETCH_LATEST, FETCH_ARTICLE, FETCH_RECENT } from \"../actions/types\";\nconst axios = require(\"axios\");\n\nexport const fetchPosts = () => async (dispatch) => {\n\t// fetch(\"/blog/articles.json\")\n\t// \t.then((res) => res.json())\n\t// \t.then((data) => {\n\t// \t\tdispatch({\n\t// \t\t\ttype: FETCH_POSTS,\n\t// \t\t\tpayload: data,\n\t// \t\t});\n\t// \t})\n\t// \t.catch((err) => console.log(err));\n\taxios\n\t\t.get(\"/api\")\n\t\t.then((res) => res.data)\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: FETCH_POSTS,\n\t\t\t\tpayload: data,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => console.log(err));\n};\n\nexport const fetchLatest = () => async (dispatch) => {\n\t// fetch(\"/blog/articles.json\")\n\t// \t.then((res) => res.json())\n\t// \t.then((data) => {\n\t// \t\tdispatch({\n\t// \t\t\ttype: FETCH_LATEST,\n\t// \t\t\tpayload: data[0],\n\t// \t\t});\n\t// \t})\n\t// \t.catch((err) => console.log(err));\n\n\taxios\n\t\t.get(\"/api\")\n\t\t.then((res) => res.data)\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: FETCH_LATEST,\n\t\t\t\tpayload: data[0],\n\t\t\t});\n\t\t})\n\t\t.catch((err) => console.log(err));\n};\n\nexport const fetchArticle = (param) => async (dispatch) => {\n\t// const fetchData = await fetch(\"/blog/articles.json\");\n\t// const json = await fetchData.json();\n\t// const data = await json.find((item) => item.heading === param);\n\t// await dispatch({\n\t// \ttype: FETCH_ARTICLE,\n\t// \tpayload: data,\n\t// });\n\taxios\n\t\t.get(\"/api\")\n\t\t.then((res) => res.data)\n\t\t.then((response) => {\n\t\t\tresponse.find((item) => item.heading === param);\n\t\t})\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: FETCH_ARTICLE,\n\t\t\t\tpayload: data,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => console.log(err));\n};\n\nexport const fetchRecent = () => async (dispatch) => {\n\t// const fetchData = await fetch(\"/blog/articles.json\");\n\t// const json = await fetchData.json();\n\t// const data = await json.slice(0, 3);\n\t// await dispatch({\n\t// \ttype: FETCH_RECENT,\n\t// \tpayload: data,\n\t// });\n\taxios\n\t\t.get(\"/api\")\n\t\t.then((res) => res.data)\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: FETCH_LATEST,\n\t\t\t\tpayload: data.slice(0,3),\n\t\t\t});\n\t\t})\n\t\t.catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}