{"ast":null,"code":"import { FETCH_POSTS, FETCH_LATEST, FETCH_ARTICLE, FETCH_RECENT } from \"../actions/types\";\nimport axios from \"axios\";\nexport const fetchPosts = () => async dispatch => {\n  const fetch = await axios.get(\"/blog/articles.json\");\n  return dispatch({\n    type: FETCH_POSTS,\n    payload: fetch.data\n  });\n};\nexport const fetchLatest = () => async dispatch => {\n  const fetch = await axios.get(\"/blog/articles.json\");\n  return dispatch({\n    type: FETCH_LATEST,\n    payload: fetch.data[0]\n  });\n};\nexport const fetchArticle = param => async dispatch => {\n  const fetch = await axios.get(\"/blog/articles.json\");\n  const data = fetch.data.find(item => item.heading === param);\n  return dispatch({\n    type: FETCH_ARTICLE,\n    payload: data\n  });\n};\nexport const fetchRecent = () => async dispatch => {\n  const fetch = await axios.get(\"/blog/articles.json\");\n  return dispatch({\n    type: FETCH_RECENT,\n    payload: fetch.data.slice(0, 3)\n  }); // axios\n  // \t.get(\"/api\")\n  // \t// .get(\"/blog/articles.json\")\n  // \t.then((res) => res.data)\n  // \t.then((data) => {\n  // \t\tdispatch({\n  // \t\t\ttype: FETCH_RECENT,\n  // \t\t\tpayload: data.slice(0, 3),\n  // \t\t});\n  // \t})\n  // \t.then(() => console.log(\"Fetched fromg MongoDB\"))\n  // \t.catch((err) => console.log(err));\n};","map":{"version":3,"sources":["/Users/mac/Desktop/Codes/lmj/client/src/actions/blogActions.js"],"names":["FETCH_POSTS","FETCH_LATEST","FETCH_ARTICLE","FETCH_RECENT","axios","fetchPosts","dispatch","fetch","get","type","payload","data","fetchLatest","fetchArticle","param","find","item","heading","fetchRecent","slice"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,EAAmDC,YAAnD,QAAuE,kBAAvE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,QAAMC,KAAK,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,qBAAV,CAApB;AACA,SAAOF,QAAQ,CAAC;AACfG,IAAAA,IAAI,EAAET,WADS;AAEfU,IAAAA,OAAO,EAAEH,KAAK,CAACI;AAFA,GAAD,CAAf;AAIA,CANM;AAQP,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAON,QAAP,IAAoB;AACpD,QAAMC,KAAK,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,qBAAV,CAApB;AACA,SAAOF,QAAQ,CAAC;AACfG,IAAAA,IAAI,EAAER,YADS;AAEfS,IAAAA,OAAO,EAAEH,KAAK,CAACI,IAAN,CAAW,CAAX;AAFM,GAAD,CAAf;AAIA,CANM;AAQP,OAAO,MAAME,YAAY,GAAIC,KAAD,IAAW,MAAOR,QAAP,IAAoB;AAC1D,QAAMC,KAAK,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,qBAAV,CAApB;AACA,QAAMG,IAAI,GAAGJ,KAAK,CAACI,IAAN,CAAWI,IAAX,CAAiBC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiBH,KAA3C,CAAb;AACA,SAAOR,QAAQ,CAAC;AACfG,IAAAA,IAAI,EAAEP,aADS;AAEfQ,IAAAA,OAAO,EAAEC;AAFM,GAAD,CAAf;AAIA,CAPM;AASP,OAAO,MAAMO,WAAW,GAAG,MAAM,MAAOZ,QAAP,IAAoB;AACpD,QAAMC,KAAK,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,qBAAV,CAApB;AACA,SAAOF,QAAQ,CAAC;AACfG,IAAAA,IAAI,EAAEN,YADS;AAEfO,IAAAA,OAAO,EAAEH,KAAK,CAACI,IAAN,CAAWQ,KAAX,CAAiB,CAAjB,EAAoB,CAApB;AAFM,GAAD,CAAf,CAFoD,CAOpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBM","sourcesContent":["import { FETCH_POSTS, FETCH_LATEST, FETCH_ARTICLE, FETCH_RECENT } from \"../actions/types\";\nimport axios from \"axios\";\n\nexport const fetchPosts = () => async (dispatch) => {\n\tconst fetch = await axios.get(\"/blog/articles.json\");\n\treturn dispatch({\n\t\ttype: FETCH_POSTS,\n\t\tpayload: fetch.data,\n\t});\n};\n\nexport const fetchLatest = () => async (dispatch) => {\n\tconst fetch = await axios.get(\"/blog/articles.json\");\n\treturn dispatch({\n\t\ttype: FETCH_LATEST,\n\t\tpayload: fetch.data[0],\n\t});\n};\n\nexport const fetchArticle = (param) => async (dispatch) => {\n\tconst fetch = await axios.get(\"/blog/articles.json\");\n\tconst data = fetch.data.find((item) => item.heading === param);\n\treturn dispatch({\n\t\ttype: FETCH_ARTICLE,\n\t\tpayload: data,\n\t});\n};\n\nexport const fetchRecent = () => async (dispatch) => {\n\tconst fetch = await axios.get(\"/blog/articles.json\");\n\treturn dispatch({\n\t\ttype: FETCH_RECENT,\n\t\tpayload: fetch.data.slice(0, 3),\n\t});\n\n\t// axios\n\t// \t.get(\"/api\")\n\t// \t// .get(\"/blog/articles.json\")\n\t// \t.then((res) => res.data)\n\t// \t.then((data) => {\n\t// \t\tdispatch({\n\t// \t\t\ttype: FETCH_RECENT,\n\t// \t\t\tpayload: data.slice(0, 3),\n\t// \t\t});\n\t// \t})\n\t// \t.then(() => console.log(\"Fetched fromg MongoDB\"))\n\t// \t.catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}