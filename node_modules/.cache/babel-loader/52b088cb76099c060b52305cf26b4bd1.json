{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mac/Desktop/Codes/lmj/client/src/Components/Reusable Components/ScrollToTop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\n\nconst ScrollToTop = () => {\n  _s();\n\n  const [showScroll, setShowScroll] = useState(false); // const [mount, setMount] = useState(false);\n\n  const [hideScroll, setHideScroll] = useState(false);\n\n  const scrollTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", checkScrollTop);\n    console.log(showScroll);\n    return () => {\n      setShowScroll(false);\n      window.removeEventListener(\"scroll\", checkScrollTop);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [window.location.href, showScroll, hideScroll]);\n\n  const checkScrollTop = () => {\n    console.log(\"Still running\");\n\n    if (!showScroll && window.pageYOffset > 300) {\n      setShowScroll(true);\n      setHideScroll(false);\n    } else if (showScroll && window.pageYOffset <= 300) {\n      setShowScroll(false);\n      setHideScroll(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `bg-light rounded-circle shadow ${showScroll ? \"d-block\" : \"d-none\"}`,\n    id: \"scrollTop\",\n    onClick: scrollTop,\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fa fa-arrow-up text-primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ScrollToTop, \"c9ddI+1O/zIVHQB0LoLnkw4WNiM=\");\n\n_c = ScrollToTop;\nexport default ScrollToTop;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollToTop\");","map":{"version":3,"sources":["/Users/mac/Desktop/Codes/lmj/client/src/Components/Reusable Components/ScrollToTop.js"],"names":["React","useEffect","useState","ScrollToTop","showScroll","setShowScroll","hideScroll","setHideScroll","scrollTop","window","scrollTo","top","behavior","addEventListener","checkScrollTop","console","log","removeEventListener","location","href","pageYOffset"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,KAAD,CAA5C,CADyB,CAEzB;;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMM,SAAS,GAAG,MAAM;AACvBC,IAAAA,MAAM,CAACC,QAAP,CAAgB;AACfC,MAAAA,GAAG,EAAE,CADU;AAEfC,MAAAA,QAAQ,EAAE;AAFK,KAAhB;AAIA,GALD;;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCC,cAAlC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AAEA,WAAO,MAAM;AACZC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAI,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCH,cAArC;AACA,KAHD,CALe,CAUf;AACA,GAXQ,EAWN,CAACL,MAAM,CAACS,QAAP,CAAgBC,IAAjB,EAAuBf,UAAvB,EAAmCE,UAAnC,CAXM,CAAT;;AAaA,QAAMQ,cAAc,GAAG,MAAM;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,QAAI,CAACZ,UAAD,IAAeK,MAAM,CAACW,WAAP,GAAqB,GAAxC,EAA6C;AAC5Cf,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA,KAHD,MAGO,IAAIH,UAAU,IAAIK,MAAM,CAACW,WAAP,IAAsB,GAAxC,EAA6C;AACnDf,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA;AACD,GATD;;AAWA,sBACC;AAAM,IAAA,SAAS,EAAG,kCAAiCH,UAAU,GAAG,SAAH,GAAe,QAAS,EAArF;AAAwF,IAAA,EAAE,EAAC,WAA3F;AAAuG,IAAA,OAAO,EAAEI,SAAhH;AAAA,2BACC;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAzCD;;GAAML,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst ScrollToTop = () => {\n\tconst [showScroll, setShowScroll] = useState(false);\n\t// const [mount, setMount] = useState(false);\n\tconst [hideScroll, setHideScroll] = useState(false);\n\n\tconst scrollTop = () => {\n\t\twindow.scrollTo({\n\t\t\ttop: 0,\n\t\t\tbehavior: \"smooth\",\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"scroll\", checkScrollTop);\n\n\t\tconsole.log(showScroll);\n\n\t\treturn () => {\n\t\t\tsetShowScroll(false);\n\t\t\twindow.removeEventListener(\"scroll\", checkScrollTop);\n\t\t};\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [window.location.href, showScroll, hideScroll]);\n\n\tconst checkScrollTop = () => {\n\t\tconsole.log(\"Still running\");\n\t\tif (!showScroll && window.pageYOffset > 300) {\n\t\t\tsetShowScroll(true);\n\t\t\tsetHideScroll(false);\n\t\t} else if (showScroll && window.pageYOffset <= 300) {\n\t\t\tsetShowScroll(false);\n\t\t\tsetHideScroll(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<span className={`bg-light rounded-circle shadow ${showScroll ? \"d-block\" : \"d-none\"}`} id=\"scrollTop\" onClick={scrollTop}>\n\t\t\t<i className=\"fa fa-arrow-up text-primary\"></i>\n\t\t</span>\n\t);\n};\n\nexport default ScrollToTop;\n"]},"metadata":{},"sourceType":"module"}