{"ast":null,"code":"import { FETCH_POSTS, FETCH_LATEST, FETCH_ARTICLE, FETCH_RECENT } from \"../actions/types\";\nimport axios from \"axios\";\nexport const fetchPosts = () => async dispatch => {\n  const fetchData = await axios.get(\"/api\");\n  console.log(fetchData.data);\n  return dispatch({\n    type: FETCH_POSTS,\n    payload: fetchData.data\n  }); // axios\n  // \t.get(\"/api\")\n  // \t// .get(\"/blog/articles.json\")\n  // \t.then((res) => res.data)\n  // \t.then((data) => {\n  // \t\tconsole.log(data);\n  // \t\tdispatch({\n  // \t\t\ttype: FETCH_POSTS,\n  // \t\t\tpayload: data,\n  // \t\t});\n  // \t})\n  // \t.then(() => console.log(\"Fetched fromg MongoDB\"))\n  // \t.catch((err) => console.log(err));\n};\nexport const fetchLatest = () => async dispatch => {\n  const fetchData = await axios.get(\"/api\");\n  console.log(fetchData.data);\n  return dispatch({\n    type: FETCH_POSTS,\n    payload: fetchData.data\n  });\n  axios.get(\"/api\") // .get(\"/blog/articles.json\")\n  .then(res => res.data).then(data => {\n    dispatch({\n      type: FETCH_LATEST,\n      payload: data[0]\n    });\n  }).then(() => console.log(\"Fetched fromg MongoDB\")).catch(err => console.log(err));\n};\nexport const fetchArticle = param => async dispatch => {\n  axios.get(\"/api\") // .get(\"/blog/articles.json\")\n  .then(res => res.data).then(response => {\n    return response.find(item => item.heading === param);\n  }).then(data => {\n    dispatch({\n      type: FETCH_ARTICLE,\n      payload: data\n    });\n  }).then(() => console.log(\"Fetched fromg MongoDB\")).catch(err => console.log(err));\n};\nexport const fetchRecent = () => async dispatch => {\n  axios.get(\"/api\") // .get(\"/blog/articles.json\")\n  .then(res => res.data).then(data => {\n    dispatch({\n      type: FETCH_RECENT,\n      payload: data.slice(0, 3)\n    });\n  }).then(() => console.log(\"Fetched fromg MongoDB\")).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/mac/Desktop/Codes/lmj/client/src/actions/blogActions.js"],"names":["FETCH_POSTS","FETCH_LATEST","FETCH_ARTICLE","FETCH_RECENT","axios","fetchPosts","dispatch","fetchData","get","console","log","data","type","payload","fetchLatest","then","res","catch","err","fetchArticle","param","response","find","item","heading","fetchRecent","slice"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,EAAmDC,YAAnD,QAAuE,kBAAvE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,QAAMC,SAAS,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,MAAV,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,IAAtB;AACA,SAAOL,QAAQ,CAAC;AACfM,IAAAA,IAAI,EAAEZ,WADS;AAEfa,IAAAA,OAAO,EAAEN,SAAS,CAACI;AAFJ,GAAD,CAAf,CAHmD,CAQnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBM;AAuBP,OAAO,MAAMG,WAAW,GAAG,MAAM,MAAOR,QAAP,IAAoB;AACpD,QAAMC,SAAS,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,MAAV,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,IAAtB;AACA,SAAOL,QAAQ,CAAC;AACfM,IAAAA,IAAI,EAAEZ,WADS;AAEfa,IAAAA,OAAO,EAAEN,SAAS,CAACI;AAFJ,GAAD,CAAf;AAKAP,EAAAA,KAAK,CACHI,GADF,CACM,MADN,EAEC;AAFD,GAGEO,IAHF,CAGQC,GAAD,IAASA,GAAG,CAACL,IAHpB,EAIEI,IAJF,CAIQJ,IAAD,IAAU;AACfL,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEX,YADE;AAERY,MAAAA,OAAO,EAAEF,IAAI,CAAC,CAAD;AAFL,KAAD,CAAR;AAIA,GATF,EAUEI,IAVF,CAUO,MAAMN,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAVb,EAWEO,KAXF,CAWSC,GAAD,IAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAXjB;AAYA,CApBM;AAsBP,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW,MAAOd,QAAP,IAAoB;AAC1DF,EAAAA,KAAK,CACHI,GADF,CACM,MADN,EAEC;AAFD,GAGEO,IAHF,CAGQC,GAAD,IAASA,GAAG,CAACL,IAHpB,EAIEI,IAJF,CAIQM,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,CAAeC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiBJ,KAAzC,CAAP;AACA,GANF,EAOEL,IAPF,CAOQJ,IAAD,IAAU;AACfL,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEV,aADE;AAERW,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIA,GAZF,EAaEI,IAbF,CAaO,MAAMN,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAbb,EAcEO,KAdF,CAcSC,GAAD,IAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAdjB;AAeA,CAhBM;AAkBP,OAAO,MAAMO,WAAW,GAAG,MAAM,MAAOnB,QAAP,IAAoB;AACpDF,EAAAA,KAAK,CACHI,GADF,CACM,MADN,EAEC;AAFD,GAGEO,IAHF,CAGQC,GAAD,IAASA,GAAG,CAACL,IAHpB,EAIEI,IAJF,CAIQJ,IAAD,IAAU;AACfL,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAET,YADE;AAERU,MAAAA,OAAO,EAAEF,IAAI,CAACe,KAAL,CAAW,CAAX,EAAc,CAAd;AAFD,KAAD,CAAR;AAIA,GATF,EAUEX,IAVF,CAUO,MAAMN,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAVb,EAWEO,KAXF,CAWSC,GAAD,IAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAXjB;AAYA,CAbM","sourcesContent":["import { FETCH_POSTS, FETCH_LATEST, FETCH_ARTICLE, FETCH_RECENT } from \"../actions/types\";\nimport axios from \"axios\";\n\nexport const fetchPosts = () => async (dispatch) => {\n\tconst fetchData = await axios.get(\"/api\");\n\tconsole.log(fetchData.data);\n\treturn dispatch({\n\t\ttype: FETCH_POSTS,\n\t\tpayload: fetchData.data,\n\t});\n\n\t// axios\n\t// \t.get(\"/api\")\n\t// \t// .get(\"/blog/articles.json\")\n\t// \t.then((res) => res.data)\n\t// \t.then((data) => {\n\t// \t\tconsole.log(data);\n\t// \t\tdispatch({\n\t// \t\t\ttype: FETCH_POSTS,\n\t// \t\t\tpayload: data,\n\t// \t\t});\n\t// \t})\n\t// \t.then(() => console.log(\"Fetched fromg MongoDB\"))\n\t// \t.catch((err) => console.log(err));\n};\n\nexport const fetchLatest = () => async (dispatch) => {\n\tconst fetchData = await axios.get(\"/api\");\n\tconsole.log(fetchData.data);\n\treturn dispatch({\n\t\ttype: FETCH_POSTS,\n\t\tpayload: fetchData.data,\n\t});\n\n\taxios\n\t\t.get(\"/api\")\n\t\t// .get(\"/blog/articles.json\")\n\t\t.then((res) => res.data)\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: FETCH_LATEST,\n\t\t\t\tpayload: data[0],\n\t\t\t});\n\t\t})\n\t\t.then(() => console.log(\"Fetched fromg MongoDB\"))\n\t\t.catch((err) => console.log(err));\n};\n\nexport const fetchArticle = (param) => async (dispatch) => {\n\taxios\n\t\t.get(\"/api\")\n\t\t// .get(\"/blog/articles.json\")\n\t\t.then((res) => res.data)\n\t\t.then((response) => {\n\t\t\treturn response.find((item) => item.heading === param);\n\t\t})\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: FETCH_ARTICLE,\n\t\t\t\tpayload: data,\n\t\t\t});\n\t\t})\n\t\t.then(() => console.log(\"Fetched fromg MongoDB\"))\n\t\t.catch((err) => console.log(err));\n};\n\nexport const fetchRecent = () => async (dispatch) => {\n\taxios\n\t\t.get(\"/api\")\n\t\t// .get(\"/blog/articles.json\")\n\t\t.then((res) => res.data)\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: FETCH_RECENT,\n\t\t\t\tpayload: data.slice(0, 3),\n\t\t\t});\n\t\t})\n\t\t.then(() => console.log(\"Fetched fromg MongoDB\"))\n\t\t.catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}